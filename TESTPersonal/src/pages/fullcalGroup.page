<apex:page Controller="fullcalUser" sidebar="false"    >

    <apex:stylesheet value="{!URLFOR($Resource.fullcalendar_148, '/css/light-blue/jquery-ui-1.8.6.custom.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.fullcalendar_148, '/fullcalendar/fullcalendar.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.fullcalendar_148, '/qtip/dist/jquery.qtip.css')}" />

    <script type='text/javascript' src="{!URLFOR($Resource.fullcalendar_148,'/jquery/jquery-1.4.3.min.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.fullcalendar_148, '/jquery/jquery-ui-1.8.6.custom.min.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.fullcalendar_148, '/jquery/jquery_ba_dotimeout.js')}"></script>
	<script type='text/javascript' src="{!URLFOR($Resource.fullcalendar_JS)}"  ></script>
	<script type="text/javascript" src="{!URLFOR($Resource.fullcalendar_148, '/qtip/dist/jquery.qtip.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.fullcalendar_148, '/jquery/jquery.tmpl.js')}"></script>

	<apex:include pageName="fullcalUtil_JS" />

    <apex:form >

        <div id="errors"><apex:pageMessages id="errorMsgs" /></div>

        <div id='loading'>loading...</div>
		<table id='main_table'> 
        <tbody> 
            <tr>
            <td>
                <div id='miniCalendar'></div>
                 
                <div class="ui-widget">
                    <label for="selectedGroup"><h3>Group: </h3></label>
                    <input id="selectedGroup" value="{!selectedGroup.name}"/>
                    
                    <apex:outputPanel id="userListSelect" >
                    <a href="/{!selectedGroup.id}" >
						<!--  NOTE: this uses mouseOverInfoOuter and addMouseOver(), behavior that comes from salesforce internal methods to put, 
						   		up a tooltip this should be done with qTip() in the future 
						   	-->
	                    <div onmouseover="addMouseOver(this)" onfocus="addMouseOver(this)" class="mouseOverInfoOuter" 
	                    	style="padding-right:10px;" ><img title="" 
	                    	class="chatterGroupIcon" alt="" src="/s.gif" /><div style="display: none; opacity: 0;" class="mouseOverInfo">
	                    		click to navigate to Chatter Group {!selectedGroup.name}</div></div>
                    </a>
                    </apex:outputPanel>
                </div>
                
                
                <apex:outputPanel id="userList" >
                    <div class="ui-user-list " >
                    <apex:repeat value="{!Users}" var="u" >
                        <div class="ui-user-item" >
                        
                            <a href="/{!u.u.id}" >
                                <img    title="{!u.u.name}"  alt="{!u.u.name}"  src="{!u.u.SmallPhotoUrl}" /></a>
                                
                            <span class="ui-user-item-body "  >
                            
                            	<input type="checkbox" id="check{!u.u.id}" alt="{!u.u.id}" checked="checked" 
                                    class="user-selected  " 
                                    onchange="userCheckBoxChange(this,'{!u.u.id}');" />
                                
                                <label class="{!u.classname}" for="check{!u.u.id}" 
                                	style="background-color:{!u.backgroundcolor}; border-color:{!u.backgroundcolor}; color:{!u.color}" >
                                	{!u.u.name}
                                </label>
                                <a href="#" onclick="window.open('/apex/fullcalColorSettings?id={!u.u.id}', 'gcalevent', 'width=453,height=310' );">
                                	<span class="ui-icon ui-icon-gear" alt="Color" >Set Color</span>
                                </a>
                            </span>                             
                        </div>
                        
                    </apex:repeat>
                    </div>
					<!--  NOTE: this uses mouseOverInfoOuter and addMouseOver(), behavior that comes from salesforce internal methods to put, 
					   		up a tooltip this should be done with qTip() in the future 
					   	-->                    
                    <div onmouseover="addMouseOver(this)" onfocus="addMouseOver(this)" class="mouseOverInfoOuter">
                    	<img title="" class="infoIcon" alt="" src="/s.gif" /><div style="display: none; opacity: 0;" class="mouseOverInfo">
                    	The first user in this list is the default user for new events. Drag users to sort this list.</div>
                    </div>
                    
                </apex:outputPanel>
	                    
                <div class="ui-widget" style="margin-top:2em; font-family:Arial; display:none;">js debug log :
                    <div id="log" style="height: 300px; width: 220px; overflow: auto;" class="ui-widget-content"></div>
                </div>

            </td>
            
            <td><div id='calendar'></div></td>
                
            </tr>
        </tbody>
        </table>

        <apex:actionFunction name="selectedGroup" action="{!selectedGroup}"	
	        	onComplete="loadUserEvents();" 
	        	rerender="errorMsgs,userList,userListSelect, hoverNewTemplatePanel"> 
        	<apex:param name="groupId" value="" /> 
        </apex:actionFunction>
        
        <apex:actionFunction name="updateViewDisplay" action="{!viewDisplay}" onComplete="" rerender="">
            <apex:param name="view" value="" />
        </apex:actionFunction>
        
        <apex:actionFunction name="saveMove" onComplete="fadeOutErrors();" action="{!updateEventMove}" rerender="errorMsgs">
            <apex:param name="eventId" value="" />
            <apex:param name="dayDelta" value="" />
            <apex:param name="minuteDelta" value="" />
        </apex:actionFunction>
        
        <apex:actionFunction name="changeEventOwner" action="{!changeEventOwner}" onComplete="changeEventOwnerDone();fadeOutErrors();" rerender="errorMsgs">
            <apex:param name="eventId" value="" />
            <apex:param name="ownerId" value="" />
        </apex:actionFunction>


        <apex:actionFunction name="saveResize" action="{!updateEventResize}" onComplete="fadeOutErrors();" rerender="errorMsgs">
            <apex:param name="eventId" value="" />
            <apex:param name="dayDelta" value="" />
            <apex:param name="minuteDelta" value="" />
        </apex:actionFunction>

		<apex:actionFunction name="insertNewEvent" action="{!insertNewEvent}" onComplete="renderNewEvent();" rerender="errorMsgs">
            <apex:param name="title" value="" />
            <apex:param name="start" value="" />
            <apex:param name="end" value="" />
            <apex:param name="allDay" value="" />
            <apex:param name="ownerId" value="" />
            <apex:param name="whoId" value="" />
        </apex:actionFunction>
        
        <apex:actionFunction name="deleteEventById" 
	        	onComplete="fadeOutErrors();jQuery('#calendar').fullCalendar('refetchEvents');" 
	        	action="{!deleteEventById}" rerender="errorMsgs">
            <apex:param name="eventId" value="" />
            <apex:param name="ownerId" value="" />
        </apex:actionFunction>

 		<apex:actionFunction name="saveNewDefaultOwner" 
	 			onComplete="fadeOutErrors();" 
	 			action="{!saveNewDefaultOwner}" 
	 			rerender="errorMsgs,  hoverNewTemplatePanel">
            <apex:param name="ownerId" value="" />
        </apex:actionFunction>
   

<apex:outputPanel id="hoverNewTemplatePanel" ><div style="display:none;" >
<div id="hoverNewTemplate" >

	<div class="bPageBlock secondaryPalette newEvent" >
			<div class="pbHeader">
			<table cellspacing="0" cellpadding="0" border="0">
				<tbody>
					<tr>
						<td class="pbTitle">
						<h2 class="mainTitle">New Event</h2>
						</td>
						<td class="pbButton"><input type="button" title="Create"
							name="Create" class="btn" value=" Create "
							onclick="javascript:saveNewEvent(this,${start},${end},${allDay});"
							alt="${id}" /> <input type="button" title="Cancel" name="cancel"
							class="btn" value="Cancel"
							onclick="jQuery('#calendar').qtip('hide');" alt="${id}" /></td>
					</tr>
				</tbody>
			</table>

			</div>
			<div class="pbBody"><div class="pbSubsection">
			
			<table cellspacing="0" cellpadding="0" border="0" class="detailList"><tbody>
				<tr>
					<td class="labelCol">Subject</td><td class="dataCol">
					<input id="newEventSubject" ></input></td>
				</tr>
			
				<tr><td class="labelCol">Who</td><td class="dataCol"><input id="newEventWho" ></input>
				<input id="newEventWhoId" type="hidden"></input>
				</td></tr>		
				
				<tr>
					<td class="labelCol">Assigned To</td><td class="dataCol">
					<select class="assignedTo">
						<apex:repeat value="{!Users}" var="u" >  
							<option  value="{!u.u.id}" >{!u.u.name}</option>
						</apex:repeat>
					</select>	
					</td>
				</tr>		
			
				<tr><td class="labelCol">Start Time</td><td class="dataCol">${startFormat}</td></tr>		
				<tr><td class="labelCol">End Time</td><td class="dataCol">${endFormat}</td></tr>
				
			</tbody></table>
		
		</div></div>
	</div>

</div>
</div></apex:outputPanel>

    </apex:form> 

<script type='text/javascript'>    jQuery.noConflict();
   
    function changeEventOwnerDone() { 
    	// reload a single event, with it's owner, hard
    	// reload the events for all users, simple
    	jQuery('#calendar').fullCalendar('refetchEvents');
    }
    
    function renderNewEvent() { 
	   	// reload a single event, with it's owner, hard
    	// reload the events for all users, simple
    	jQuery('#calendar').fullCalendar('refetchEvents');
    }
        
        
    function loadUserEvents() {
    	// trigger onchange event to load each calendar
		jQuery('.ui-user-item input').change();  
    	
    	// sortable makes them draggable also
		jQuery('.ui-user-list').sortable({placeholder: "ui-state-highlight",
			stop: function(event, ui) { // post new owner to controller, de-bounce?
				var id = jQuery(ui.item).find('input').attr('alt');
				// only if this is the top one
				var topid = getFirstUserId();
				if ( topid == id ) 
					saveNewDefaultOwner(id);
			}
		}).disableSelection();
		
		/* done in markup
		jQuery('.ui-user-list')
			.parent()
			.append('<div onmouseover="addMouseOver(this)" onfocus="addMouseOver(this)" class="mouseOverInfoOuter"><img title="" class="infoIcon" alt="" src="/s.gif" /><div style="display: none; opacity: 0;" class="mouseOverInfo">The first user in this list is the default user for new events. Drag users to sort this list.</div></div>');
		*/
		
		// reload the styles for users who may be new
		appendUserStyles('.ui-user-list .ui-user-item-body label');  
    }
    
    function userCheckBoxChange(ele,userid) { // filter in or out events with this user id
        var action = ( jQuery(ele).attr('checked') ? 'addEventSource':	'removeEventSource');
        jQuery('#calendar').fullCalendar( action,   '/apex/fullcalUserData?id='+userid ); 
         
    } 
     
    jQuery(document).ready(function() {
	
		/* not used
        jQuery('.protoEvent').draggable({   distance: 30,   zIndex: 999, revert: true,revertDuration: 0, cursorAt: { top: 0 }                                     }); 
        */
        
        jQuery( "#selectedGroup" ).autocomplete({   source: "groupSearch",     minLength: 2,
            select: function( event, ui ) {
                log( ui.item ?
					"Selected: " + ui.item.id :
					"Nothing selected, input was " + this.value );
              
              	if ( ui.item == null ) return;
              	
              	// clean up all event sources
              	jQuery('.ui-user-list input').each( function (idx,val) { 
		        	var userid = jQuery(val).attr('alt');
		        	jQuery('#calendar').fullCalendar( 'removeEventSource', '/apex/fullcalUserData?id='+userid );
				});
				
                selectedGroup( ui.item.id );    // call apex to select the group and reload the calendar
                
            }
        });
          
        jQuery('#miniCalendar').datepicker({            dateFormat: 'DD, d MM, yy',
            onSelect: function(dateText,dp){
                jQuery('#calendar').fullCalendar('gotoDate',new Date(Date.parse(dateText)));
                jQuery('#calendar').fullCalendar('changeView','agendaDay');
            }
        });
     
        var theView = getSettingValue("{!recentView}","agendaDay"); // get default from custom settings
     	
     	var theDropTarget = null;
     	
        theCal = jQuery('#calendar').fullCalendar({ 
            
            height: 700,
            defaultEventMinutes: 15,
            slotMinutes: 15,        
            defaultView: theView,  
            firstHour: 9,
            theme: true,
            lazyFetching: true,
             
            timeFormat: {               agenda: 'h:mm{ - h:mm}',                '': 'h(:mm)t'           } ,
            allDaySlot: false,
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            
            loading: function(bool,view) {
                if (bool) {             
                    jQuery('#loading').show();
                } else {
                    jQuery('#loading').fadeOut('fast');
                }
            },
            
            /* mouse overs - not used 
            eventMouseover:  function ( event, jsEvent, view ) {       	
            	log( 'eventMouseover ' + event.start );         
            	theDropTarget = event;  
            },
            eventMouseout:  function ( event, jsEvent, view ) {         	
            	log( 'eventMouseout '+ event.start);
            	theDropTarget = null;           
            },
            */
            eventRender: eventRender,
            
            /* 
             * when qtip comes up and we drag an event 
             * the qtip may stay up and become disconnected
             * instead hide and disable on drag start and enable when drag stops
             */
            eventDragStart: function( event, jsEvent, ui, view ) { 
                ui.helper.qtip('hide');
                ui.helper.qtip('disable');
            },
            eventDragStop: function( event, jsEvent, ui, view ) { 
                ui.helper.qtip('enable');
            },
            
            eventDrop: function(event, dayDelta, minuteDelta,allDay,revertFunc) {
            	if ( event.isViewMore != null ) { 
            		revertFunc();
            		return;
            	}
                saveMove(event.id,dayDelta,minuteDelta);
            },
            
            eventResize: function(event,dayDelta,minuteDelta,revertFunc) {
                saveResize(event.id,dayDelta,minuteDelta);
                
            },
            
            selectable: true,
            selectHelper: true,
            select: 	newEventPopup,
                        
            dayClick: function(date, allDay, jsEvent, view) {
            
               if (allDay) {
                    log('Clicked on the entire day: ' + date);
                }else{
                    log('Clicked on the slot: ' + date);
                }
                
                log('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);
                
                log('Current view: ' + view.name);
                
                // change the day's background color just for fun
                //jQuery(this).css('background-color', 'red');
            },          
            
            eventClick: function(event, view) {
                log( view.toString() + ' ' + event.toString() );
                
                if ( event.isViewMore != null ) { 
                    // switch to the day view on the date of this event
                    theCal.fullCalendar('changeView','agendaDay' );
                    theCal.fullCalendar('gotoDate', event.start );
                    return false;
                }
               
                // opens events in a popup window
                // window.open(event.url, 'gcalevent', 'width=433,height=285');
                
                // navigate to that url
                window.location.href = event.url; 
                return false;
            },
            
            viewDisplay:  function(view) { // The calendar's date-range changes whenever the user switches to a new view 
                if ( theView != view.name ) { 
                    theView = view.name;
                    jQuery.doTimeout( 'id', 2000, function() { // debounce a few seconds
                        updateViewDisplay(theView); // save out to custom settings
                    }, true);
                }
                
            },

            /* 
             * this function is called when something is dropped onto the calendar from the outside
             *
            droppable: true, 
            drop: function(date, allDay, ev, ui) { 
                var k = theCal;
                var v = theView;
                var j = date;
				var ui = ui;
            },
            */
                
            editable: true
        
        }); // end fullcalendar()
        
        
        /*  in case we want to jump to a date from a url param
         * jQuery('#calendar').fullCalendar('gotoDate',new Date(2010,3,1) );
         * 
         */
       	
       	appendUserStyles('.ui-user-list .ui-user-item-body label');  
        
        loadUserEvents();	// starts the data loads, one per user 
                
    }); // end document ready
    
    
    /* Helper functions
	 * -----------------------------------------------------------------------------
	 * 
	 */
	    
    function eventRender(event, element, view) {
        
        if ( view.name == 'month' ) { 
            var sameDayList = view.eachElementOnDay(event)  ; 
             
            if ( sameDayList != undefined && sameDayList.length == 5 ) {
            
                // this event now marks a jump to date on click
            
                var html = '<a><span class="fc-event-time"></span><span class="fc-event-title"> more ';
                html += '</span></a>';
                jQuery(element).html(html);
                event.isViewMore = true; 
                
                // this event should not be draggable...
                
            }
            if (sameDayList != undefined && sameDayList.length > 5 ) {
                return false;
            }
        } // month view
        
		// append who to the event title in the UI 
		if (event.who != '' ) {
			var j = jQuery(element).find('.fc-event-title');
			j.text( j.text() + ' | ' + event.who  );
		}
		
		// allow users to be dropped onto events, change the owner of that event
		if ( ! event.isViewMore ) {
			
			jQuery( element ).droppable({ 
				accept: '.ui-user-item', // allow others ? events onto events ? whoid?
				greedy: true ,  
				hoverClass: 'ui-droppable-highlight',   
				tolerance: 'pointer',
				drop: function( jsevent, ui) { 
					var newOwner = ui.draggable.find('input').attr('alt');
					log( newOwner + ' dropped onto event '+event.id); 
					
					// TODO add a waiting image to the event
					jQuery(element).fadeOut(3000);
					
					changeEventOwner( event.id, newOwner );
				},
			}); 
			
			addToolTipToEvent(element,event);
		}
		  
    }

</script>

<apex:include pageName="fullcalStyle" />

</apex:page>